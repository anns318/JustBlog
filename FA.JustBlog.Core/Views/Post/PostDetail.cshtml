@using Microsoft.AspNetCore.Identity
@model Post
@inject UserManager<User> _userManager
@{
    ViewData["Title"] = Model.Title;
    ViewData["CreatedDate"] = "<span class='meta'>Posted " + @Model.CreatedDate + " by " + @Model.View + " view(s)</span>";
    var user = await _userManager.GetUserAsync(User);
}
<article class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <p>@Html.Raw(Model.Content)</p>
            </div>
        </div>
    </div>
</article>
@if (user != null)
{
    <form id="PostComment" method="post" class="mb-5">
        <input id="PostId" name="PostId" value="@Model.Id" hidden />
        <input id="UserId" name="UserId" value="@user.Id" hidden />
        <div class="form-group">
            <label for="comment">Your Comment</label>
            <textarea id="Content" name="Content" class="form-control" rows="3"></textarea>
            <span></span>
        </div>
        <div class="d-flex justify-content-between align-items-center">
            <div class="form-group">
                <div class="g-recaptcha" data-callback="recaptchaCallback" data-sitekey="6LcCdy4pAAAAAH0mWzIRLGnv-CEaenXVF-2--Wqw"></div>
            </div>
            <div ><button id="submitComment" type="submit" class="btn btn-primary">Send</button></div>
        </div>
    </form>
}
else
{
    <p>You need to <a href="/login">login</a> to comment</p>
}

<div id="comment">

    @await Component.InvokeAsync("Comment", new { Comments = Model.Comment, PostId = Model.Id })
</div>

@section Scripts {
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <script>
        function recaptchaCallback() {
            $('#submitComment').removeAttr('disabled');
        };
        $("#PostComment").on("submit", async (e) => {
            e.preventDefault();
            // const UserId = $('#UserId').val()
            // const PostId = $('#PostId').val()
            // const Content = $('#Content').val()
            // const formData = {
            //     UserId,
            //     PostId,
            //     Content,
            // }
            // console.log(formData)

            // // var res = await fetch("/Comment/SaveComment", {method: "Post", formData: formData})
            // // .then(res=>res.text)
            // $('#comment').load('/Comment/SaveComment',formData)
        })

        $('#submitComment').on('click', () => {
            const UserId = $('#UserId').val()
            const PostId = $('#PostId').val()
            const Content = $('#Content').val()
            if (Content.trim().length == 0) {
                return alert("Please input comment")
            }
            if (grecaptcha.getResponse().length == 0) {
                return alert("Please check the captcha!")
            }
         
            const formData = {
                UserId,
                PostId,
                Content,
            }
            $.post('/Comment/SaveComment', formData, (data, status) => {
                console.log(status)
                $('#comment').html(`${data}`)
                $('#Content').val('')
                grecaptcha.reset()
            })
           
        })
    </script>
}